name: os-checker tools action
description: Run a collection of checkers targeting Rust crates, and report bad checking results and statistics.
branding:
  icon: box
  color: orange

inputs:
  database_repo:
    description: A gihub repo in the form of `user/repo`.
    required: true
  base_url:
    description: A base url used in WebUI artifacts.
    required: true
    default: ""
  docs_url:
    description: Rustdocs deployment site.
    required: true

  git_author:
    description: Author and committer used in pushing artifacts to database repo.
    required: true
    default: bot
  git_email:
    description: Email of author and committer used in pushing artifacts to database repo.
    required: true
    default: bot@users.noreply.github.com
  gh_token:
    description: Github token with write access to database_repo and read access to config repos.
    required: true

  configs:
    description: A list of os-checker configuration file paths, separated by single space.
    required: true
  rust_log:
    description: RUST_LOG for tools to control the verbosity of logging.
    default: info

  rust_toolchain:
    description: Default Rust toolchain.
    default: nightly
  lockbud_toolchain:
    description: Rust toolchain for Lockbud.
    default: nightly-2024-10-05
  mirai_toolchain:
    description: Rust toolchain for Mirai.
    default: nightly-2024-02-05
  rap_toolchain:
    description: Rust toolchain for Rap.
    default: nightly-2024-10-12
  rudra_toolchain:
    description: Rust toolchain for Rudra.
    default: nightly-2021-10-21

runs:
  using: "composite"
  steps:
        
    - run: |
        export DIR=/tmp/check
        mkdir $DIR
        cd $DIR

        gh release download -R os-checker/database precompiled-checkers -p checkers.tar.xz
        tar -xvJf checkers.tar.xz -C ~/.cargo/bin/

        # gh release download -R os-checker/database precompiled-checkers -p os-checker
        # chmod +x os-checker
        # mv os-checker ~/.cargo/bin
        cargo install --git https://github.com/os-checker/os-checker.git os-checker os-checker-database 2>/dev/null
        os-checker --help

        gh release download -R os-checker/docs -p os-checker-plugin-docs-installer.sh
        sh os-checker-plugin-docs-installer.sh
        gh release download -R os-checker/plugin-cargo -p os-checker-plugin-cargo-installer.sh
        sh os-checker-plugin-cargo-installer.sh
        gh release download -R os-checker/plugin-github-api -p os-checker-plugin-github-api-installer.sh
        sh os-checker-plugin-github-api-installer.sh

      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}

    - run: $GITHUB_ACTION_PATH/install.sh
      shell: bash
      env:
        LOCKBUD_TOOLCHAIN: ${{ inputs.lockbud_toolchain }}
        MIRAI_TOOLCHAIN: ${{ inputs.mirai_toolchain }}
        RAP_TOOLCHAIN: ${{ inputs.rap_toolchain }}
        RUDRA_TOOLCHAIN: ${{ inputs.rudra_toolchain }}
        OS_CHECKER_RUST_TOOLCHAIN: ${{ inputs.rust_toolchain }}

    - run: |
        export DIR=/tmp/check

        # split each json file and copy them to $DIR
        echo "$OS_CHECKER_CONFIGS" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//' | awk '{for(i=1;i<=NF;i++) system("cp " $i " $DIR" )}'
        cd $DIR

        # Run checker
        os-checker db --start cache.redb
        os-checker run --emit batch/single.json --db cache.redb
        os-checker db --done cache.redb

        # Generate JSON results
        os-checker-database

        # Generate api info
        os-checker-plugin-github-api

        # Generate cargo info
        os-checker-plugin-cargo

        # Generate rustdocs
        os-checker-plugin-docs

        # Generate WebUI
        gh repo clone os-checker/os-checker.github.io
        cd os-checker.github.io/os-checks
        npm install 2>/dev/null && npm run generate 2>/dev/null 1>/dev/null && cp -LR dist $DIR

        tree -h -L 4

        # Push to database_repo
        $GITHUB_ACTION_PATH/push.sh
      shell: bash
      env:
        OS_CHECKER_CONFIGS: ${{ inputs.configs }}
        GIT_AUTHOR: ${{ inputs.git_author }}
        GIT_EMAIL: ${{ inputs.git_email }}
        DATABASE_REPO: ${{ inputs.database_repo }}
        BASE_URL: ${{ inputs.base_url }}
        DOCS_URL: ${{ inputs.docs_url }}
        GH_TOKEN: ${{ inputs.gh_token }}

